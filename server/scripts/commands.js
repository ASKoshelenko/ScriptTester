const sandboxDir = '/home/ask/ubuntu-scripts-tester/sandbox';

const commands = {
  '1_find_system_groups.sh': `cut -d: -f1,3 /etc/group | grep -E ':[0-9]{1,3}$' > ${sandboxDir}/sys_groups && cat ${sandboxDir}/sys_groups`,
  '2_find_files_with_access_rights.sh': `find . -perm -u=x,g=w`,
  '3_find_all_scripts.sh': `find . -type f -executable -exec sh -c '[ "$(head -c2 "$1")" = "#!" ] && echo "$1"' _ {} \\; && echo "Task completed"`,
  '4_search_scripts_by_user.sh': `sudo -u root -H find . -type f -executable -exec sh -c 'head -c2 "$1" | grep -q "#!" && echo "$1"' _ {} \\; && echo "Task completed"`,
  '5_recursive_search_words.sh': `grep -r --include=*.txt "file" && echo "Task completed"`,
  '6_find_duplicate_files.sh': `find . -type f -exec md5sum {} + | sort | uniq -D -w32 | sort -k2 && echo "Task completed"`,
  '7_find_symbolic_links.sh': `find . -type l -lname *file1.txt && echo "Task completed"`,
  '8_find_hard_links.sh': `find . -samefile dir2/file2.txt && echo "Task completed"`,
  '9_find_names_by_inode.sh': `ls -i dir1/file1.txt | cut -d' ' -f1 | xargs find . -inum && echo "Task completed"`,
  '10_find_names_by_inode_multiple_partitions.sh': `ls -i dir1/file1.txt | cut -d' ' -f1 | xargs find . -xdev -inum && echo "Task completed"`,
  '11_delete_file_with_links.sh': `sudo find -L . -samefile dir2/file2.txt > ${sandboxDir}/remove_checklist && echo "Task completed"`,
  '12_recursive_change_permissions.sh': `find . -type f -perm 644 -exec chmod 640 {} \\; && echo "Task completed"`,
  '13_compare_directories.sh': `diff -rN -u5 dir1/ dir2/ && echo "Task completed"`,
  '14_get_mac_addresses.sh': `ip link | grep ether | xargs -n4 | cut -d' ' -f2 && echo "Task completed"`,
  '15_list_authorized_users.sh': `sudo users | xargs -n1 | sort -u && echo "Task completed"`,
  '16_list_active_network_connections.sh': `ss -atOH | cut -d' ' -f1 | sort | xargs -n1 | uniq -c && echo "Task completed"`,
  '17_reassign_symbolic_link.sh': `readlink dir1/link_to_file1 | xargs -I {} ln -srf {} link_to_file1 && echo "Task completed"`,
  '18_create_symbolic_links.sh': `mkdir sym_dir && cat file_list | xargs -I{} sh -c 'ln -sbrf {} sym_dir/link_to_$(basename {})' && echo "Task completed"`,
  '19_copy_directory_with_links.sh': `cp -a dir1/ backup/ && rsync -al dir1/ rsync_backup/ && echo "Task completed"`,
  '20_copy_directory_with_symlinks.sh': `cp -a dir1/ archive/ && echo "Task completed"`,
  '21_copy_with_attributes.sh': `cp -rp dir1/ dir4/ && echo "Task completed"`,
  '22_convert_relative_to_direct_links.sh': `find . -type l | xargs -I{} sh -c 'ln -sf $(realpath {}) {}' && echo "Task completed"`,
  '23_convert_direct_to_relative_links.sh': `find . -type l | xargs -I{} sh -c 'ln -srf $(readlink {}) {}' && echo "Task completed"`,
  '24_find_and_delete_broken_links.sh': `find . -xtype l -delete && echo "Task completed"`,
  '25_unpack_archive.sh': `tar -xvf arc.tar dir1/ && echo "Task completed"`,
  '26_pack_directory_with_attributes.sh': `sudo tar -Jcf arc.tar.xz dir1/ && sudo tar -xf arc.tar.xz && echo "Task completed"`,
  '27_copy_directory_structure.sh': `find dir1/ -type d -print | xargs -I{} mkdir -p dir_structure/{} && echo "Task completed"`,
  '28_list_users_alphabetically.sh': `cut -d: -f1,3 /etc/passwd | grep -E ":[0-9]{4,}$" | cut -d: -f1 | sort && echo "Task completed"`,
  '29_list_system_users_sorted_by_id.sh': `cut -d: -f1,3 /etc/passwd | grep -E ":[0-9]{1,3}$" | sort -t: -nk2 | tr ':' ' ' && echo "Task completed"`,
  '30_list_users_sorted_by_reverse_id.sh': `cut -d: -f1,3 /etc/passwd | grep -E ":[0-9]{1,3}$" | sort -t: -rnk2 | cut -d: -f1 && echo "Task completed"`,
  '31_list_users_without_authorization_rights.sh': `sudo cut -d: -f1,2 /etc/shadow | grep -vE ':\!\*' | cut -d: -f1 && sudo cut -d: -f1,2 /etc/shadow | grep -E ':\!\*' | cut -d: -f1 && echo "Task completed"`,
  '32_list_users_with_or_without_terminal.sh': `cut -d: -f1,7 /etc/passwd | grep -E "/(bash|sh|zsh)$" | cut -d: -f1 && cut -d: -f1,7 /etc/passwd | grep -vE "/(bash|sh|zsh)$" | cut -d: -f1 && echo "Task completed"`,
  '33_download_all_links_from_page.sh': `wget -qO - https://abc.xyz/ | grep -oP 'href="\\K[^"]+' | xargs -I{} wget -P downloads/ {} && echo "Task completed"`,
  '34_stop_long_running_processes.sh': `ps -eo comm= | xargs -n1 killall -o 5d && find /proc -maxdepth 1 -type d -ctime +5 | grep -oP '/\\K[0-9]+' | xargs kill -9 && echo "Task completed"`,
  '35_delete_orphaned_jpeg_files.sh': `find . -type f -name '*.jpeg' | xargs -I{} sh -c 'pname="$(dirname {})/$(basename -s .jpeg {})"; [ ! -e \${pname}.txt ] && rm \${pname}.jpeg' && echo "Task completed"`,
  '36_find_ip_address.sh': `ip -o addr | grep inet | cut -d ' ' -f2,7 | tail -n +3 && echo "Task completed"`,
  '37_get_all_ip_addresses_from_file.sh': `grep -oP '\\b(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\b' dir1/ip_addr.txt && sudo grep -P '\\b(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\b' /etc/netplan/*.yaml | xargs && echo "Task completed"`,
  '38_find_active_hosts.sh': `nmap -sn 192.168.56.0/24 && nmap -sn -iL hosts-server.txt && printf "192.168.1.%d\\n" {1..254} | xargs -I{} ping -c1 {} > /dev/null; ip -4 n | grep REACHABLE | cut -d ' ' -f1 && cat hosts-server.txt | xargs -I{} ping -c1 {} > /dev/null; ip -4 n | grep REACHABLE | cut -d ' ' -f1 && echo "Task completed"`,
  '39_get_raised_interfaces_ips.sh': `ip a | grep 'state UP' | cut -d ' ' -f2 | xargs -n1 ip a show | grep inet | cut -d ' ' -f5,6 && sudo grep -P '\\b(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\b' /etc/netplan/*.yaml | xargs && echo "Task completed"`,
  '40_get_subdomains_from_ssl.sh': `echo | openssl s_client -connect microsoft.com:443 2>/dev/null | openssl x509 -noout -ext subjectAltName | tail -n +2 | xargs -n1 | cut -d: -f2 | tr -d ' ' && echo "Task completed"`,
  '41_extract_path_name_extension.sh': `file='./dir1/file1.txt'; path=$(dirname $file); name=$(basename \${file%.*}); ext=\${file##*.}; echo $path $name $ext && echo "Task completed"`,
  '42_delete_files_by_size_and_pattern.sh': `find dir1/ -type f -size 22c -name '*.txt' -delete && echo "Task completed"`,
  '43_create_files_with_identifiers.sh': `xargs -a hash_file_list -n2 sh -c 'mkdir -p $(dirname $1) && echo $2 > $1' && echo "Task completed"`
};

module.exports = { commands, sandboxDir };
